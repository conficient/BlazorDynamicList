@page "/"
@using Library1;
@using Library2;
<h1>Dynamic Component Binding</h1>
<p>See the <a href="https://github.com/conficient/BlazorDynamicList">ReadMe</a> on GitHub for discussion</p>
<h5>Examples of the two Components</h5>
<div class="row">
    <div class="col">
        <Component1 Product=@p1></Component1>
    </div>
    <div class="col">
        <Component2 Product=@p2></Component2>
    </div>
</div>

<button @onclick="@CreateProducts">Create Products</button>
<p>
    Here we have examples of <b>Component1</b> and <b>Component2</b> used directly.
    Select the <i>Fetch Data</i> page to see the dynamic list
</p>
@code {

    Product1 p1 { get; set; }
    Product2 p2 { get; set; }

    /// <summary>
    /// Create two random products to test binding
    /// </summary>
    void CreateProducts()
    {
        var repo = new RepositoryLib.ProductRepository();
        p1 = repo.CreateProduct1(1);
        p2 = repo.CreateProduct2(2);
    }
}
